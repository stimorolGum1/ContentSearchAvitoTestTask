Тестовое задание для стажёра iOS

Общее описание задания

Необходимо написать приложение iOS для поиска контента, которое будет состоять из двух экранов:

Экран поиска медиа-контента
Экран с детальной информацией, который отображается после нажатия на элемент из результатов поиска
Требования к реализации

Для выполнения задания необходимо использовать только api, а не Libraries & SDKs

Общие требования

При реализации необходимо использовать Unsplash API https://unsplash.com/documentation
Внешний вид приложения реализуется на усмотрение кандидата

///
Экран поиска

Отображает строку ввода поискового запроса // done
Сохраняет историю поиска (до пяти последних запросов) //done
В момент начала ввода отображаются элементы-подсказки с ранее введенными значениями. По мере ввода символов подсказки фильтруются по вхождению без учета регистра. Например, при вводе ‘scor’ могут быть включены The Score, Scorpions, underscore и т.п. //done
Поисковый запрос выполняется по завершении ввода при помощи элементов управления клавиатуры //done
Результаты поиска представлены на экране в виде «плиток», расположенных в два столбца (по умолчанию limit = 30) //done
В каждом элементе поисковой выдачи отображено превью-изображение и описание. Помимо этого, элементы отображают и другую информацию — на ваше усмотрение // done
С экрана поиска должен открываться экран детальной информации по нажатию на элемент поисковой выдачи. // done
Будет плюсом
///
///
Экран с детальной информацией

Отображает детальную информацию о медиа-контенте:

Изображение контента // done
Описание контента //done
Информация об авторе контента //done
Будет плюсом

Наличие функции "Поделиться изображением", например с другом (отправить фото в телеграмм, vk и тд)
Наличие функции "Сохранить изображение" в галерею

///
Будет плюсом ко всей работе

Покрытие кода unit-тестами
Отсутствие подвисаний (hitches, hangs) при скроле поисковой выдачи
Нефункциональные требования

Каждый экран должен поддерживать отображение трёх состояний:
Отображение контента
Отображение ошибки
Состояние загрузки
Элементы не показываются на экране если необходимая для их отображения часть информации отсутствует в ответе сервера
Требования к коду

Приложение написано на языке Swift, без использования сторонних библиотек
Пользовательский интерфейс полностью реализован кодом с использованием UIKit (без SwiftUI)
Для выполнения сетевых запросов используется URLSession
Ход решения

Если у вас возникнут вопросы по заданию, ответы на которые вы не найдете в описанных требованиях, то вы вольны принимать решения самостоятельно. В таком случае приложите к проекту README-файл, в котором будет список вопросов/проблем, с которыми вы столкнулись, и поясните как вы их решили и почему именно таким образом.

Оформление решения

Код должен быть размещен в git-репозитории
Сделайте репозиторий публичным, чтобы была возможность проверить вашу работу
Приложите файл README.md с инструкцией по запуску
Если требуется, приложите файл README.md с вопросами/проблемами, с которыми вы столкнулись, и с описанием логики их решений.
